//  Yat programming language
//  Copyright (C) 2019  Nikita Dubovikov
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with this program.  If not, see <https://www.gnu.org/licenses/>.
//

nspace alloc
{
	fn malloc = i32 size -> u64 {
		let a = 0;
		_asm {
	movl @LVAR(size), %ecx
	call malloc
	leave
	ret
		}
	};

	u64 mut tempptr;
	fn dealloc = u64 ptr -> null {
		let a = 0;
		_asm {
	movq @LVAR(alloc.ptr), %rcx
	call free
	xorq %rax, %rax
		}
	};

	fn realloc = (u64 ptr, i32 size) -> u64 {
		let a = 0;
		_asm {
	movl @LVAR(alloc.size), %edx
	movq @LVAR(alloc.ptr), %rcx
	call realloc
	leave
	ret
		}
	};
}

